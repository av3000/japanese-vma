services:
  laravel-app:
    build:
      context: .
      dockerfile: .docker/Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www/html
    environment:
      SERVICE_NAME: laravel-app
      SERVICE_TAGS: dev
      DB_HOST: db
      DB_DATABASE: '${DB_DATABASE}'
      DB_USERNAME: '${DB_USERNAME}'
      DB_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - ./:/var/www/html
    networks:
      - shared-network
    depends_on:
      - db
    entrypoint: ["/bin/sh", "/var/www/html/.docker/entrypoint.sh"]

  webserver:
    image: nginx:alpine
    container_name: nginx_webserver
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - .docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - shared-network
    depends_on:
      - laravel-app

  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    command: --max_allowed_packet=134217728 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_COLLATION: '${DB_COLLATION}'
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - shared-network

networks:
  shared-network:
    driver: bridge

volumes:
  dbdata:
